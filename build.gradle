group = 'org.athenian'
version = '1.0.10-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.9.1'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "io.grpc:grpc-all:${grpcVersion}"
    compile "com.beust:jcommander:1.72"
    compile "org.slf4j:jul-to-slf4j:1.7.25"
    compile "com.typesafe:config:1.3.2"
    compile "org.assertj:assertj-core:3.9.0"
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks.generatedFilesBaseDir = "${projectDir}/src/generated"

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += 'src/generated/main/grpc'
            srcDirs += 'src/generated/main/java'
        }
    }
}

apply plugin: 'idea'

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}

clean {
    delete "${projectDir}/src/generated"
}

apply plugin: 'application'

startScripts.enabled = false

task rosBridge(type: CreateStartScripts) {
    mainClassName = 'org.athenian.RosBridge'
    applicationName = 'ros-bridge'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task rosClient(type: CreateStartScripts) {
    mainClassName = 'org.athenian.RosClient'
    applicationName = 'ros-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(rosBridge)
    from(rosClient)
    fileMode = 0755
}

